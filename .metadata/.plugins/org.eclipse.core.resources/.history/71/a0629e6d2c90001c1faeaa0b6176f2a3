package com.trees.problems.solution;



public class TreeSolutionRunner {

	public static void main(String[] args) {
		TreeNode<Integer> node1 = new TreeNode<Integer>(1);
		TreeNode<Integer> node2 = new TreeNode<Integer>(2);
		TreeNode<Integer> node3 = new TreeNode<Integer>(3);
		TreeNode<Integer> node4 = new TreeNode<Integer>(11);
		TreeNode<Integer> node5 = new TreeNode<Integer>(5);
		TreeNode<Integer> node6 = new TreeNode<Integer>(6);
		TreeNode<Integer> node7 = new TreeNode<Integer>(7);
		
		node1.leftChild=node2;
		node1.rightChild=node3;
		node2.leftChild=node4;
		node2.rightChild=node5;
		node3.leftChild=node6;
		node3.rightChild=node7;
		
		TreeSolutions solutionRunner = new TreeSolutions();
		Traversal<Integer> traversalRunner = new Traversal<Integer>();
		TreeNode<Integer> root = solutionRunner.insertInBinaryTreeLevelOrder(node1,10);
		traversalRunner.levelOrderTraversal(root);
		//System.out.println(solutionRunner.maxInBinaryTree(node1));
		//System.out.println(solutionRunner.maxInBinaryTree02(node1));
		//System.out.println(solutionRunner.findNodeInBinaryTree(node1,6));
		//System.out.println(solutionRunner.findNodeInBinaryTreeNonRecursive(node1,11));
		
	}
}
